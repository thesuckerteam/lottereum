{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  fill: \", \";\\n  opacity: \", \";\\n  stroke: none;\\n\"], [\"\\n  fill: \", \";\\n  opacity: \", \";\\n  stroke: none;\\n\"]),\n    _templateObject2 = _taggedTemplateLiteralLoose([\"\\n  fill: none;\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"], [\"\\n  fill: none;\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"]);\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar SvgArea = styled.path(_templateObject, function (props) {\n  return props.color;\n}, function (props) {\n  return props.opacity;\n});\nvar SvgPath = styled.path(_templateObject2, function (props) {\n  return props.opacity;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.color;\n});\n\nvar Path = function (_React$Component) {\n  _inherits(Path, _React$Component);\n\n  function Path() {\n    _classCallCheck(this, Path);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Path.prototype.getBasisPoint = function getBasisPoint(i) {\n    var _props = this.props,\n        data = _props.data,\n        pathSmoothing = _props.pathSmoothing;\n    var totalData = data.length - 1;\n    var iPoint = i < 0 ? 0 : i > totalData ? totalData : i;\n    var point = data[iPoint];\n    var ratio = 1 - pathSmoothing;\n    var tangent = iPoint / totalData;\n    var firstPoint = data[0];\n    var distance = {\n      x: data[totalData].x - firstPoint.x,\n      y: data[totalData].y - firstPoint.y\n    };\n    return {\n      x: ratio * point.x + (1 - ratio) * (firstPoint.x + tangent * distance.x),\n      y: ratio * point.y + (1 - ratio) * (firstPoint.y + tangent * distance.y)\n    };\n  };\n\n  Path.prototype.getCurvePath = function getCurvePath(i) {\n    var _props2 = this.props,\n        getX = _props2.getX,\n        getY = _props2.getY;\n    var pCurrent = this.getBasisPoint(i);\n    var pMinus1 = this.getBasisPoint(i - 1);\n    var pMinus2 = this.getBasisPoint(i - 2);\n    var x1 = (2 * pMinus2.x + pMinus1.x) / 3;\n    var y1 = (2 * pMinus2.y + pMinus1.y) / 3;\n    var x2 = (pMinus2.x + 2 * pMinus1.x) / 3;\n    var y2 = (pMinus2.y + 2 * pMinus1.y) / 3;\n    var x3 = (pMinus2.x + 4 * pMinus1.x + pCurrent.x) / 6;\n    var y3 = (pMinus2.y + 4 * pMinus1.y + pCurrent.y) / 6;\n    return \"C\\n      \" + getX(x1) + \"\\n      \" + getY(y1) + \"\\n      \" + getX(x2) + \"\\n      \" + getY(y2) + \"\\n      \" + getX(x3) + \"\\n      \" + getY(y3) + \"\\n    \";\n  };\n\n  Path.prototype.getLinePath = function getLinePath(point) {\n    var _props3 = this.props,\n        getX = _props3.getX,\n        getY = _props3.getY;\n    return \"L \" + getX(point.x) + \" \" + getY(point.y);\n  };\n\n  Path.prototype.getPath = function getPath() {\n    var _this2 = this;\n\n    var _props4 = this.props,\n        data = _props4.data,\n        getX = _props4.getX,\n        getY = _props4.getY,\n        pathSmoothing = _props4.pathSmoothing;\n    var isSmooth = pathSmoothing !== null && pathSmoothing >= 0 && pathSmoothing <= 1 && data.length > 1;\n    var d = data.reduce(function (acc, point, i) {\n      var partialPath = isSmooth ? _this2.getCurvePath(i) : _this2.getLinePath(point);\n      return i === 0 ? \"M \" + getX(point.x) + \" \" + getY(point.y) + \" \" : acc + \" \" + partialPath + \" \";\n    }, \"\");\n\n    if (isSmooth) {\n      d += this.getCurvePath(data.length);\n      d += \"L \" + getX(data[data.length - 1].x) + \" \" + getY(data[data.length - 1].y) + \" \";\n    }\n\n    return d;\n  };\n\n  Path.prototype.getAreaPath = function getAreaPath() {\n    var _props5 = this.props,\n        data = _props5.data,\n        getX = _props5.getX,\n        getY = _props5.getY;\n    return \"\\n      \" + this.getPath() + \"\\n      L \" + getX(data[data.length - 1].x) + \" \" + getY(0) + \"\\n      L \" + getX(data[0].x) + \" \" + getY(0) + \"\\n    \";\n  };\n\n  Path.prototype.render = function render() {\n    var _props6 = this.props,\n        areaColor = _props6.areaColor,\n        areaOpacity = _props6.areaOpacity,\n        areaVisible = _props6.areaVisible,\n        pathColor = _props6.pathColor,\n        pathOpacity = _props6.pathOpacity,\n        pathVisible = _props6.pathVisible,\n        pathWidth = _props6.pathWidth;\n    return pathVisible || areaVisible ? React.createElement(\"g\", null, pathVisible && React.createElement(SvgPath, {\n      d: this.getPath(),\n      opacity: pathOpacity,\n      color: pathColor,\n      width: pathWidth\n    }), areaVisible && React.createElement(SvgArea, {\n      d: this.getAreaPath(),\n      color: areaColor,\n      opacity: areaOpacity\n    })) : null;\n  };\n\n  return Path;\n}(React.Component);\n\nPath.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  areaColor: PropTypes.string,\n  areaOpacity: PropTypes.number,\n  areaVisible: PropTypes.bool,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  })).isRequired,\n  getX: PropTypes.func,\n  getY: PropTypes.func,\n  pathColor: PropTypes.string,\n  pathOpacity: PropTypes.number,\n  pathSmoothing: PropTypes.number,\n  pathVisible: PropTypes.bool,\n  pathWidth: PropTypes.number\n} : {};\nPath.defaultProps = {\n  areaColor: \"#34495e\",\n  areaOpacity: 0.5,\n  areaVisible: false,\n  getX: function getX(x) {\n    return x;\n  },\n  getY: function getY(y) {\n    return y;\n  },\n  pathColor: \"#34495e\",\n  pathOpacity: 1,\n  pathSmoothing: null,\n  pathVisible: true,\n  pathWidth: 2\n};\nexport default Path;","map":null,"metadata":{},"sourceType":"module"}